Algorithm:
Use string buffer
For each word in the line, see if the size can fit in the line, if not, end the line and go to the next line
  If that word is longer than the width, write the word on its own and remember to return EXIT_FAILURE at the end
1) Check inputs (if one, read from standard input. if two, either it's a file name or a directory)
2) 

- when printing out each new line, use write(1, stringbuffer, stringbuffer->used)
  - then, remove with the string buffer remove method
  
  using isspace() put characters that is not spcae into string array, then concat the string
  track of the number of new lines, if there are more than one new lines, apply number of new lines-1
  
  1) question @201 in piazza (does this mean we only look inside the called directory and only do something if it's a file?)
  2) Do spaces count within the wrap size? (ex. 6-> name\nis vs name is)
